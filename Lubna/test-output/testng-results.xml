<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-05-07T12:05:07Z" name="Default suite" finished-at="2018-05-07T12:05:07Z" duration-ms="9">
    <groups>
    </groups>
    <test started-at="2018-05-07T12:05:07Z" name="Default test" finished-at="2018-05-07T12:05:07Z" duration-ms="9">
      <class name="mapSynq.Lubna.TestCases.mapSynqTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:mapSynq.Lubna.TestCases.mapSynqTest@7a8c8dcf]" started-at="2018-05-07T20:04:36Z" name="beforeSuite" finished-at="2018-05-07T20:04:36Z" duration-ms="0" status="FAIL">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not create a session: The session timed out while connecting to a Safari instance. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 30.05 seconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'Asifs-MBP', ip: '2406:3003:2006:1348:c5ac:372d:4d14:80ad%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '10.0.1'
Driver info: driver.version: SafariDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not create a session: The session timed out while connecting to a Safari instance. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 30.05 seconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'Asifs-MBP', ip: '2406:3003:2006:1348:c5ac:372d:4d14:80ad%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '10.0.1'
Driver info: driver.version: SafariDriver
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:132)
	at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:78)
	at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
	at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:38)
	at mapSynq.Lubna.BaseClass.getDriver(BaseClass.java:31)
	at mapSynq.Lubna.TestCases.mapSynqTest.beforeSuite(mapSynqTest.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:277)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method signature="validateAndClickAlertForUnfilledSourceAndDestination()[pri:0, instance:mapSynq.Lubna.TestCases.mapSynqTest@7a8c8dcf]" started-at="2018-05-07T20:05:07Z" name="validateAndClickAlertForUnfilledSourceAndDestination" finished-at="2018-05-07T20:05:07Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAndClickAlertForUnfilledSourceAndDestination -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:mapSynq.Lubna.TestCases.mapSynqTest@7a8c8dcf]" started-at="2018-05-07T20:05:07Z" name="afterSuite" finished-at="2018-05-07T20:05:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- mapSynq.Lubna.TestCases.mapSynqTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
